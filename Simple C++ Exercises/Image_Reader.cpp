#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define PGM_MAX 255
/*
int getColorId (double x0, double y0, double x, double y, int Ncolor, int colorID)
{
        double xtemp;

        while(1)
        {
                if ( ( x*x + y*y <= (2*2) ) && ( colorID < Ncolor ) )
                {
                   xtemp = x*x - y*y +x0;
                   y = 2*x*y + y0;
                   x = xtemp;
                   colorID = colorID +1;
                }     
                else
                {
                    break;
                }
        }
        
        return colorID;
}
*/
int getColorId (double x0, double y0, double x, double y, int Ncolor, int colorID)
{
        double xtemp;

        if ( ( x*x + y*y <= (2*2) ) && ( colorID < Ncolor ) )
        {
                xtemp = x*x - y*y +x0;
                y = 2*x*y + y0;
                x = xtemp;

                return 1+getColorId(x0, y0, x, y, Ncolor, colorID+1);
        }
        else
                return 0;
}


void drawfractal( int ***A, int N, int *colormapR, int *colormapG, int *colormapB, int Ncolor)
{
        int i, j, colorID;
        double x0, y0;

        for (i=0; i<N; i++)
        {
                for (j=0; j<N; j++)
                {
                        x0 = 5 * ( ( (double) i / N ) - 0.5 );
                        y0 = 5 * ( ( (double) j / N ) - 0.5 );
                        colorID = getColorId (x0, y0, 0, 0, Ncolor, 0);

                        if ( colorID == Ncolor )
                        {
                                A[i][j][0] = 0;
                                A[i][j][1] = 0;
                                A[i][j][2] = 0;
                        }
                        else
                        {
                                A[i][j][0] = colormapR[colorID];
                                A[i][j][1] = colormapG[colorID];
                                A[i][j][2] = colormapB[colorID];
                        }
                }
        }
}

void int2Char(int num, FILE *f)
{
   int count, colorID = 0;
   char m[40];

   count = 0;

   do
   {
      m[count] = num%10 + '0';
      num -= num % 10;
      num /= 10;
      count++;
   }
   while (num > 0);

   for (count = count - 1; count >= 0; count--)
      fwrite(&m[count], sizeof(char), 1, f);
}



void ppmWrite(int ***image, int N, char *name)
{
   int i, j;
   unsigned char ch;
   char *fileName;
   FILE *f;
   fileName = name;
   f = fopen(fileName, "wb");
   if (f == NULL)
      printf("File writing error");

   fwrite("P6\n", sizeof(char), 3, f);
   fwrite("# CREATOR: Alex (C) 2020\n", sizeof(char),33,f);

   int2Char(N, f);
   fwrite(" ", sizeof(char), 1, f);
   int2Char(N, f);
   fwrite("\n", sizeof(char), 1, f);
   int2Char(PGM_MAX, f);
   fwrite("\n", sizeof(char), 1, f);

   for (i=0; i<N; i++)
   {
      for (j=0; j<N; j++)
      {
             ch = (unsigned char)image[i][j][0];
         fwrite(&ch, sizeof(unsigned char), 1, f);
             ch = (unsigned char)image[i][j][1];
         fwrite(&ch, sizeof(unsigned char), 1, f);
             ch = (unsigned char)image[i][j][2];
         fwrite(&ch, sizeof(unsigned char), 1, f);
      }
   }

   fclose(f);
}



int main(void)
{
        int i, j, N, Ncolor = 500, ***image;
        char name[10];
           int colormapR[500] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,105,107,109,111,113,115,117,119,121,123,125,127,129,131,133,135,137,139,141,143,145,147,149,151,153,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,207,209,211,213,215,217,219,221,223,225,227,229,231,233,235,237,239,241,243,245,247,249,251,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,251,249,247,245,243,241,239,237,235,233,231,229,227,225,223,221,219,217,215,213,211,209,207,204,202,200,198,196,194,192,190,188,186,184,182,180,178,176,174,172,170,168,166,164,162,160,158,156,153,151,149,147,145,143,141,139,137,135,133,131,129};
           int colormapG[500] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,105,107,109,111,113,115,117,119,121,123,125,127,129,131,133,135,137,139,141,143,145,147,149,151,153,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,207,209,211,213,215,217,219,221,223,225,227,229,231,233,235,237,239,241,243,245,247,249,251,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,251,249,247,245,243,241,239,237,235,233,231,229,227,225,223,221,219,217,215,213,211,209,207,204,202,200,198,196,194,192,190,188,186,184,182,180,178,176,174,172,170,168,166,164,162,160,158,156,153,151,149,147,145,143,141,139,137,135,133,131,129,127,125,123,121,119,117,115,113,111,109,107,105,102,100,98,96,94,92,90,88,86,84,82,80,78,76,74,72,70,68,66,64,62,60,58,56,54,51,49,47,45,43,41,39,37,35,33,31,29,27,25,23,21,19,17,15,13,11,9,7,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
           int colormapB[500] = {129,131,133,135,137,139,141,143,145,147,149,151,153,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,207,209,211,213,215,217,219,221,223,225,227,229,231,233,235,237,239,241,243,245,247,249,251,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,251,249,247,245,243,241,239,237,235,233,231,229,227,225,223,221,219,217,215,213,211,209,207,204,202,200,198,196,194,192,190,188,186,184,182,180,178,176,174,172,170,168,166,164,162,160,158,156,153,151,149,147,145,143,141,139,137,135,133,131,129,127,125,123,121,119,117,115,113,111,109,107,105,102,100,98,96,94,92,90,88,86,84,82,80,78,76,74,72,70,68,66,64,62,60,58,56,54,51,49,47,45,43,41,39,37,35,33,31,29,27,25,23,21,19,17,15,13,11,9,7,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};   


        printf("Write the name of the picture's file: ");
        scanf("%s", &name);
        printf("Write the size of the picture: ");
        scanf("%d", &N);
        image = (int ***) malloc ( N * sizeof (int **) );
        if ( image == NULL )
        {
                printf("den yparxei h dia8esimh mnhmh.\n");
                exit(1);
        }
        for (i=0; i < N; i++)
        {
                image[i] = (int **) malloc ( N * sizeof (int *) );
                if ( image[i] == NULL )
                {
                        printf("den yparxei h dia8esimh mnhmh.\n");
                        exit(1);
                }
                for (j=0; j < N; j++)
                {
                        image[i][j] = (int *) malloc ( 3 * sizeof (int ) );
                        if ( image[i][j] == NULL )
                        {
                                printf("den yparxei h dia8esimh mnhmh.\n");
                                exit(1);
                        }
                }

        }
        drawfractal(image, N, colormapR, colormapG, colormapB, Ncolor);
        ppmWrite(image, N, name);

        return 0;
}
